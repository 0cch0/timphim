---
import Layout from '../../layouts/Layout.astro'
import { fetchTMDB } from '../../tmdb.ts'

const { media_type, id } = Astro.params
const typeName = media_type == 'movie' ? 'Phim lẻ' : 'Phim bộ'
const res = await fetchTMDB(`/${media_type}/${id}`)
const data = await res.json()
if (!data.id) {
	return new Response(null, { status: 404 })
	return Astro.rewrite("/404")
}
const date = data.release_date || data.first_air_date
const year = date.slice(0, 4)
const title = data.title || data.name
const originalTitle = data.original_title || data.original_name
const subtitle = () => {
	if (data.title != originalTitle) {
		return originalTitle
	}
	return ''
}

const _title = `${title} (${year})`
---

<Layout title={_title}>
	<b>{typeName} / {_title}</b>
	<hr class="hr-dot">

	<article>
		<div>
			<b>{title}</b>
			{subtitle && (
				<div class="subtitle">
					<b>{subtitle}</b>
				</div>
			)}
			<div class="genres">
				{data.genres.map((genre) => (
					<div class="genre">{genre.name}</div>
				))}
			</div>
			<p>{data.tagline}</p>
			<p>{data.overview}</p>
		</div>
		<figure>
			<img src={`https://image.tmdb.org/t/p/w300${data.poster_path}`} draggable="false" />
		</figure>
	</article>
</Layout>

<style>
	article {
		margin: 2rem 0;
		display: grid;
		grid-template-columns: auto auto;
		gap: 1rem;
		p {
			line-height: 1.5rem;
			word-spacing: .15rem;
		}
	}
	figure {
		padding: .5rem;
		margin: 0;
		border: 1px solid gray;
		box-shadow: 2px 2px silver;
		img {
			display: block;
			width: 100%;
			height: 100%;
			aspect-ratio: 2 / 3;
		}
	}
	.subtitle {
		margin: .2rem 0;
		color: gray;
	}
	.genres {
		display: flex;
		flex-wrap: wrap;
		gap: .5rem;
		margin: .5rem 0;
	}
	.genre {
		padding: .2rem .5rem;
		border: 1px dotted gray;
		text-transform: uppercase;
		text-align: center;
	}
</style>
